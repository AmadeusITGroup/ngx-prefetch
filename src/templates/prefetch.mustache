(function() {
  var prefetchConfig = {{{prefetchConfig}}};
  function getResType(extension) {
    if (prefetchConfig && prefetchConfig.resourceTypes) {
      for (var key in prefetchConfig.resourceTypes) {
        if (prefetchConfig.resourceTypes[key].indexOf(extension) !== -1) {
          return key;
        }
      }
    }
    return null;
  }

  function appendLink(href, as) {
    var res = document.createElement('link');
    res.rel = 'prefetch';
    if (as) { res.as = as; }
    if (prefetchConfig && prefetchConfig.crossorigin) {
      res.setAttribute('crossorigin', '');
    }
    res.href = href;
    document.head.appendChild(res);
  }

  function addLocalizationFile(locPattern) {
    if (dynamicContentFiles.includes(locPattern)) {
      resList.push(locPattern);
      return true;
    }
    return false;
  }

  var resList = {{{resourceArray}}};
  var staticsFullPath = '{{{staticsFullPath}}}';
  var staticsFullPathKey = 'STATICS_FULL_PATH';
  // for testing
  if (staticsFullPath === `{${staticsFullPathKey}}`) { staticsFullPath = '.'; }

  var dynamicContentPath = '{DYNAMIC_CONTENT_PATH}';
  var dynamicContentPathKey = 'DYNAMIC_CONTENT_PATH';

  var dynamicContentFiles = '{DYNAMIC_CONTENT_FILES}';
  var dynamicContentFilesKey = 'DYNAMIC_CONTENT_FILES';

  var hasDynamicContent = (dynamicContentPath !== `{${dynamicContentPathKey}}`) && (dynamicContentFiles !== `{${dynamicContentFilesKey}}`);

  if (hasDynamicContent) {
    try {
      dynamicContentFiles = JSON.parse(dynamicContentFiles);
    } catch (e) {
      console.error(`Could not parse dynamic content files: '${dynamicContentFiles}'`);
    }
  }

  var language = '{LANG}';
  var languageKey = 'LANG';
  if (language !== `{${languageKey}}` && /^([a-z]{2,3})(-([A-Z]{2}|[A-Za-z]{4,5}))?$/.test(language)) {
    if (hasDynamicContent && dynamicContentFiles) {
      if (dynamicContentFiles.includes(`{{{localizationPattern}}}`)) {
        resList.push(`{{{localizationPattern}}}`);
      } else if (prefetchConfig.fallbackLocalesMap) {
        var fallback = false;
        var inputLanguage = language;
        if (prefetchConfig.fallbackLocalesMap[inputLanguage]) {
          language = prefetchConfig.fallbackLocalesMap[inputLanguage];
          fallback = addLocalizationFile(`{{{localizationPattern}}}`);
        }
        if (!fallback && inputLanguage.includes('-')) {
          language = inputLanguage.split('-')[0];
          if (prefetchConfig.fallbackLocalesMap[language]) {
            language = prefetchConfig.fallbackLocalesMap[language];
            fallback = addLocalizationFile(`{{{localizationPattern}}}`);
          }
        }
        if (!fallback && prefetchConfig.fallbackLocalesMap['*']) {
          language = prefetchConfig.fallbackLocalesMap['*'];
          fallback = addLocalizationFile(`{{{localizationPattern}}}`);
        }
        if (!fallback) {
          console.warn('Language, fallback language, and default language not found in dynamic content files.')
        }
      } else {
        console.warn('Language not found in dynamic content files.')
      }
    } else {
      resList.push(`/{{{localizationPattern}}}`);
    }
  }

  resList.forEach(function(resource) {
    if (typeof resource === 'string') {
      var fullPath = staticsFullPath;
      if (hasDynamicContent && dynamicContentFiles.includes(resource.slice(1))) {
        fullPath = dynamicContentPath + '/';
      }
      var splitRes = resource.split('.');
      var extension = splitRes[splitRes.length - 1];
      appendLink(fullPath + resource, getResType(extension));
    }
  });
})();
